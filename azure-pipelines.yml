# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

variables:
  projectName: parrot
  registryServerName: '$(registryName).azurecr.io'
  imageName: '$(projectName)'

steps:
- script: echo Hello, world!
  displayName: 'Run a one-line script'

- script: |
    cd flaskwebapp 
    wget http://data.csail.mit.edu/soundnet/categories/categories_imagenet.txt 
    wget https://www.cntk.ai/resnet/ResNet_152.model
    docker build --tag="abi-cicd" .
  displayName: 'Pull Model'

- script: |
    docker build --tag="abi-cicd" .
  displayName: 'Docker Build'

- script: |
    docker login $(registryServerName) -u $(registryLogin) -p $(registryPassword)
    docker push abi-cicd
  displayName: 'Docker Push'
  
- task: HelmInstaller@0
  displayName: 'Install Helm'
  inputs:
    helmVersion: 2.14.1

- bash: helm package --version $(build.buildId) --destination $(build.artifactStagingDirectory) $(system.defaultWorkingDirectory)/$(projectName)/charts/$(projectName)
  displayName: 'helm package'

- bash: az acr helm push -n $(registryName) -u $(registryLogin) -p $(registryPassword) $(build.artifactStagingDirectory)/$(projectName)-$(build.buildId).tgz
  displayName: 'az acr helm push'
